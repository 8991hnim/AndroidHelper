  public static void exportDB(Context context) {
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss dd-MM-yyyy");
        String fileName = sdf.format(Calendar.getInstance().getTimeInMillis());
        //duong dan db hien tai
        String inFileName = context.getDatabasePath(MySQLiteHelper.DATABASE_NAME).getAbsolutePath();
        File dbFile = new File(inFileName);
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(dbFile);
            //noi luu
            String outFileName = context.getExternalFilesDir(null).getAbsolutePath()+"/" + fileName;
            Log.d("testt","p" + outFileName);
            //Open the empty db as the output stream
            OutputStream output = new FileOutputStream(outFileName);
            //transfer bytes from the inputfile to the outputfile
            byte[] buffer = new byte[1024];
            int length;
            while ((length = fis.read(buffer))>0){
                output.write(buffer, 0, length);
            }
            //Close the streams
            output.flush();
            output.close();
            fis.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


public boolean importDatabase(String dbPath) throws IOException {
        String DB_FILEPATH = "/data/data/com.thukypro/databases/" + MySQLiteHelper.DATABASE_NAME;
        // Close the SQLiteOpenHelper so it will commit the created empty
        // database to internal storage.
//        close();
        File newDb = new File(dbPath);
        File oldDb = new File(DB_FILEPATH);
        if (newDb.exists()) {
            FileUtils.copyFile(new FileInputStream(newDb), new FileOutputStream(oldDb));
            // Access the copied database so SQLiteHelper will cache it and mark
            // it as created.
//            getWritableDatabase().close();
            return true;
        }
        return false;
    }